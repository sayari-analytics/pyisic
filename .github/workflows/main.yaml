name: tests
on:
  push:
    paths-ignore:
      - 'docs/**'
      - '**.rst'
      - '**.md'
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron:  "0 0 * * 1"
      branches: [ $default-branch ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.6", "3.7", "3.8", "3.9"]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get pip cache dir
      id: pip-cache
      run: echo "::set-output name=dir::$(pip cache dir)"

    - name: pip cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-py${{ matrix.python-version }}-${{ hashFiles('**/setup.py') }}
        restore-keys: ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install .[dev]

    - name: Test with pytest
      run: |
        python -m pytest --cov=./pyisic/ --cov-report=xml
        python scripts/data_artifacts.py

    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        fail_ci_if_error: true
        verbose: true

    - name: Upload data artifact
      uses: actions/upload-artifact@v2
      with:
        name: data
        path: standards.json

  style:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.6", "3.7", "3.8", "3.9"]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get pip cache dir
      id: pip-cache
      run: echo "::set-output name=dir::$(pip cache dir)"

    - name: pip cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-precommit-py${{ matrix.python-version }}-${{ hashFiles('**/.pre-commit-config.yaml') }}
        restore-keys: ${{ runner.os }}-pip-precommit-

    - name: Install pre-commit
      run: |
        python -m pip install --upgrade pip
        python -m pip install pre-commit
        PRE_COMMIT_HOME=$(pwd)/pre-commit-cache pre-commit install

    - name: Run Style Check
      run: |
        PRE_COMMIT_HOME=$(pwd)/pre-commit-cache pre-commit run --all
